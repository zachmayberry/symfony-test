<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Symptom;
use Doctrine\ORM\EntityRepository;
use FOS\RestBundle\Request\ParamFetcherInterface;

/**
 * SymptomRepository
 *
 * This class was generated by the PhpStorm "Php Annotations" Plugin. Add your own custom
 * repository methods below.
 */
class SymptomRepository extends EntityRepository
{
    public function findAllQueryBuilder(ParamFetcherInterface $paramFetcher)
    {
        $qb = $this->createQueryBuilder('symptom');

        // FILTER
        $filters = !is_null($paramFetcher->get('filters')) ? $paramFetcher->get('filters') : array();
        foreach($filters as $key => $filter) {
            $qb->andWhere("symptom.$key = :$key")
                ->setParameter($key, $filter);
        }

        // ORDER BY

        // default sorting
        $qb->addOrderBy("symptom.title", 'ASC');

        $orderBy = !is_null($paramFetcher->get('order_by')) ? $paramFetcher->get('order_by') : array();
        foreach ($orderBy as $sort => $order) {
            $qb->addOrderBy("symptom.$sort", $order);
        }

        return $qb;
    }

    /**
     * Case-insensitive search for one symptom by title
     *
     * @param $title
     * @return mixed
     */
    public function fineOneByCaseInsensitiveTitle($title)
    {
        return $this->createQueryBuilder('symptom')
            ->where('upper(symptom.title) = upper(:title)')
            ->setParameter('title', $title)
            ->getQuery()
            ->setMaxResults(1)
            ->getOneOrNullResult();
    }
}
